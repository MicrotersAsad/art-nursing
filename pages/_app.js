import { useEffect, useState } from 'react';
import Script from 'next/script';
import Head from 'next/head';
import Navbar from './Navbar';
import Footer from './Footer';
import { AuthProvider, useAuth } from '../contexts/AuthContext';
import { useRouter } from 'next/router';
import '../styles/globals.css';
import { ClipLoader } from 'react-spinners';
import { FaArrowUp } from 'react-icons/fa'; // Import an arrow icon

function MyApp({ Component, pageProps }) {
  const router = useRouter();
  const isDashboard = router.pathname.startsWith('/dashboard'); // Check if the current route is dashboard
  const isLoginPage = router.pathname === '/login'; // Check if the current route is login

  return (
    <>
      <Head>
        <title>AsadTech</title>
        <meta name="Agency Website" content="Generated by AsadTech" />
        <link
          href="https://cdn.jsdelivr.net/npm/bootstrap@5.0.2/dist/css/bootstrap.min.css"
          rel="stylesheet"
          integrity="sha384-EVSTQN3/azprG1Anm3QDgpJLIm9Nao0Yz1ztcQTwFspd3yD65VohhpuuCOmLASjC"
          crossOrigin="anonymous"
        />
        <link
          rel="stylesheet"
          type="text/css"
          charSet="UTF-8"
          href="https://cdnjs.cloudflare.com/ajax/libs/slick-carousel/1.8.1/slick.min.css"
        />
        <link
          rel="stylesheet"
          type="text/css"
          href="https://cdnjs.cloudflare.com/ajax/libs/slick-carousel/1.8.1/slick-theme.min.css"
        />
        <link
	rel="stylesheet"
	href="//cdnjs.cloudflare.com/ajax/libs/jodit/4.2.27/jodit.min.css"
/>
      </Head>

      <Script
        src="https://cdn.jsdelivr.net/npm/bootstrap@5.0.2/dist/js/bootstrap.bundle.min.js"
        integrity="sha384-MrcW6ZMFYlzcLA8Nl+NtUVF0sA7MsXsP1UyJoMp4YLEuNSfAP+JcXn/tWtIaxVXM"
        crossOrigin="anonymous"
        strategy="lazyOnload"
      />

      <AuthProvider>
        {/* Conditionally render Navbar and Footer only if not in the dashboard */}
        {!isDashboard && <Navbar />}

        <AuthGuard isDashboard={isDashboard} isLoginPage={isLoginPage}>
          <div className={isDashboard ? 'dashboard-container' : 'site-container'}>
            <Component {...pageProps} />
            <BackToTopButton /> {/* Back to Top Button */}
          </div>
        </AuthGuard>

        {!isDashboard && <Footer />}
      </AuthProvider>
    </>
  );
}

// AuthGuard component for protecting routes and handling redirection
const AuthGuard = ({ children, isDashboard, isLoginPage }) => {
  const { user, loading } = useAuth();
  const router = useRouter();
  
  useEffect(() => {
    console.log("User:", user);
    console.log("Loading:", loading);
    console.log("Current Route:", router.pathname);
  }, [loading, user, router]);

  useEffect(() => {
    if (loading) return; // If loading, don't do anything

    // Only redirect to dashboard if the user is on login page
    if (user && isLoginPage) {
      router.push('/dashboard/overview');
      return;
    }

    // Only redirect to login if the user is trying to access dashboard but is not logged in
    if (!user && isDashboard) {
      router.push('/login');
      return;
    }
  }, [loading, user, isDashboard, isLoginPage, router]);

  if (loading) {
    return (
      <div className="flex justify-center items-center h-screen">
        <ClipLoader size={80} color={"#36D7B7"} loading={loading} />
      </div>
    );
  }

  return children;
};

// Back to Top Button component
const BackToTopButton = () => {
  const [isVisible, setIsVisible] = useState(false);

  useEffect(() => {
    // Show button when user scrolls down
    const toggleVisibility = () => {
      if (window.pageYOffset > 300) {
        setIsVisible(true);
      } else {
        setIsVisible(false);
      }
    };

    window.addEventListener('scroll', toggleVisibility);

    return () => {
      window.removeEventListener('scroll', toggleVisibility);
    };
  }, []);

  const scrollToTop = () => {
    window.scrollTo({
      top: 0,
      behavior: 'smooth',
    });
  };

  return (
    <>
      {isVisible && (
        <button
          onClick={scrollToTop}
          className="fixed bottom-5 right-5 bg-indigo-600 text-white p-3 rounded-full shadow-lg hover:bg-indigo-700 focus:outline-none"
        >
          <FaArrowUp className="w-5 h-5" />
        </button>
      )}
    </>
  );
};

export default MyApp;
