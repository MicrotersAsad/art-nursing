import { useEffect } from 'react';
import Script from 'next/script';
import Head from 'next/head';
import Navbar from './Navbar';
import Footer from './Footer';
import { AuthProvider, useAuth } from '../contexts/AuthContext';
import { useRouter } from 'next/router';
import '../styles/globals.css';

function MyApp({ Component, pageProps }) {
  const router = useRouter();
  const isDashboard = router.pathname.startsWith('/dashboard'); // Check if the current route is dashboard

  return (
    <>
      <Head>
        <title>AsadTech</title>
        <meta name="Agency Website" content="Generated by AsadTech" />
        <link
          href="https://cdn.jsdelivr.net/npm/bootstrap@5.0.2/dist/css/bootstrap.min.css"
          rel="stylesheet"
          integrity="sha384-EVSTQN3/azprG1Anm3QDgpJLIm9Nao0Yz1ztcQTwFspd3yD65VohhpuuCOmLASjC"
          crossOrigin="anonymous"
        />
        <link
          rel="stylesheet"
          type="text/css"
          charSet="UTF-8"
          href="https://cdnjs.cloudflare.com/ajax/libs/slick-carousel/1.8.1/slick.min.css"
        />
        <link
          rel="stylesheet"
          type="text/css"
          href="https://cdnjs.cloudflare.com/ajax/libs/slick-carousel/1.8.1/slick-theme.min.css"
        />
      </Head>

      <Script
        src="https://cdn.jsdelivr.net/npm/bootstrap@5.0.2/dist/js/bootstrap.bundle.min.js"
        integrity="sha384-MrcW6ZMFYlzcLA8Nl+NtUVF0sA7MsXsP1UyJoMp4YLEuNSfAP+JcXn/tWtIaxVXM"
        crossOrigin="anonymous"
        strategy="lazyOnload" // Optimize loading strategy
      />

      <AuthProvider>
        {/* Conditionally render Navbar and Footer only if not in the dashboard */}
        {!isDashboard && <Navbar />}

        <AuthGuard isDashboard={isDashboard}>
          <div className={isDashboard ? 'dashboard-container' : 'site-container'}>
            <Component {...pageProps} />
          </div>
        </AuthGuard>

        {!isDashboard && <Footer />}
      </AuthProvider>
    </>
  );
}

// AuthGuard component for protecting routes
const AuthGuard = ({ children, isDashboard }) => {
  const { user, loading } = useAuth(); // Assume useAuth provides user and loading state
  const router = useRouter();

  useEffect(() => {
    // Redirect to login if not logged in and trying to access the dashboard
    if (!loading && isDashboard && !user) {
      router.push('/login');
    }
  }, [loading, user, isDashboard, router]);

  if (loading) {
    return <div>Loading...</div>; // Show a loading state while checking auth
  }

  // Render children only if the user is authenticated or not in the dashboard route
  return isDashboard && !user ? null : children;
};

export default MyApp;
